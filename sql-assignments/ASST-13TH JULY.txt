use AdventureWorksLT2019

SELECT * FROM SalesLT.Product p 
1) What is the Name, ProductID and Weight for the item with Product Number 'RM-M823'

SELECT P.Name,P.ProductID,P.Weight
FROM SalesLT.Product p
WHERE P.ProductNumber = 'RM-M823'

2) List products with weight greater than 500. For those products, show the following information: Product ID, Name, ListPrice 
    and calculated Gross Margin (difference between list price and standard cost)
 
SELECT P.Name,P.ProductID,P.ListPrice ,( p.ListPrice - p.StandardCost) AS  GrossMargin
FROM SalesLT.Product p
WHERE P.Weight> 500

3)How many Products are there with the standard weight between 400 and 500
 
SELECT COUNT(*) FROM 
(
	SELECT P.ProductID
	FROM SalesLT.Product p
	WHERE P.Weight BETWEEN 400 AND 500
	GROUP BY P.ProductID ) T

4)How many Yellow colored bikes are there (Bikes can be identified by the Product number starting with 'BK')

SELECT COUNT(*)
FROM SalesLT.Product P
WHERE P.ProductNumber LIKE 'BK%' AND P.Color = 'Yellow'

5) Find average, maximum and minimum list price for each Product line (exclude products where Product line is NULL),
sort descending by Average Standard Cost.

SELECT SUBSTRING(P.ProductNumber,1,2) AS ProductLine, AVG(P.ListPrice) AS AVG,MAX(P.ListPrice) AS MAX ,MIN(P.ListPrice) AS MIN
FROM SalesLT.Product P
WHERE SUBSTRING(P.ProductNumber,1,2) IS NOT NULL
GROUP BY SUBSTRING(P.ProductNumber,1,2)
ORDER BY AVG(StandardCost) DESC
------------------------------------------------------------------------------------------------------------------------------------------------------

use AdventureWorksLT2019


1) Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest.
  For each order show the CompanyName and the SubTotal and the total weight of the order.




SELECT  oh.SalesOrderID,c.CompanyName,oh.SubTotal AS subtotal ,SUM(od.OrderQty * p.Weight) AS TotalWeight 
FROM SalesLT.SalesOrderHeader oh
  INNER JOIN  SalesLT.Customer c
      ON oh.CustomerID = c.CustomerID
  INNER JOIN SalesLT.SalesOrderDetail od
	  ON oh.SalesOrderID = od.SalesOrderID
  INNER JOIN SalesLT.Product p
	  ON od.ProductID = p.ProductID
GROUP BY C.CompanyName,oh.SalesOrderID,oh.SubTotal
ORDER BY (oh.SubTotal) DESC


  2)How many products in ProductCategory ‘Cranksets’ have been sold to an address in ‘London’?


SELECT * FROM SalesLT.ProductCategory pc
WHERE pc.Name = 'Cranksets'

SELECT * FROM SalesLT.Product p
where p.ProductCategoryID = 12

SELECT * FROM SalesLT.Address a
WHERE a.City = 'london'

SELECT COUNT(DISTINCT OD.ProductID) FROM SalesLT.SalesOrderDetail od
WHERE od.ProductID IN (949,950,951)


SELECT COUNT(DISTINCT od.ProductID)
FROM SalesLT.ProductCategory pc
	INNER JOIN SalesLT.Product p
	ON pc.ProductCategoryID = p.ProductCategoryID
	INNER JOIN SalesLT.SalesOrderDetail od
	ON OD.ProductID = P.ProductID
	INNER JOIN SalesLT.SalesOrderHeader oh
	ON oh.SalesOrderID = od.SalesOrderID 
	INNER JOIN SalesLT.Address a
	ON a.AddressID = oh.ShipToAddressID
WHERE pc.Name = 'cranksets'

3).For every customer with a ‘Main Office’ in Dallas show AddressLine1 of the ‘Main Office’ and AddressLine1 of the ‘Shipping’ address - if there is no shipping address leave it blank. Use one row per customer.
 -- Here Main Office and shipping is address type
				

SELECT c.CustomerID,c.FirstName,ma.AddressLine1 AS MainOffice_Address,ISNULL(sa.AddressLine1,'') AS Shipping_Address FROM SalesLT.Customer c
			INNER JOIN SalesLT.CustomerAddress main
			ON main.CustomerID = c.CustomerID AND main.AddressType = 'Main Office'
			INNER JOIN SalesLT.Address ma
			ON ma.AddressID = main.AddressID AND ma.City='DALLAS'
			LEFT JOIN SalesLT.CustomerAddress shipping
			ON c.CustomerID = shipping.CustomerID AND shipping.AddressType = 'SHIPPING'
			LEFT JOIN SalesLT.Address sa 
			ON sa.AddressID = shipping.AddressID


.For each order show the SalesOrderID and SubTotal calculated  in three ways: 
   A) From the SalesOrderHeader  (Order header table)
   B) Sum of OrderQtyUnitPrice  ( Order Detail table ) 
   C) Sum of OrderQtyListPrice (Product table)


A) From the SalesOrderHeader  (Order header table)

  SELECT oh.SalesOrderID,oh.SubTotal 
     FROM SalesLT.SalesOrderHeader oh

B) Sum of OrderQtyUnitPrice  ( Order Detail table ) 

 SELECT od.SalesOrderID, sum(od.OrderQty*od.UnitPrice) 
 FROM SalesLT.SalesOrderDetail od 
 GROUP BY od.SalesOrderID
                         
C) Sum of OrderQtyListPrice (Product table) 

SELECT od.SalesOrderID, SUM(od.OrderQty * p.ListPrice) AS Subtotal
    FROM SalesLT.SalesOrderDetail od 
	INNER JOIN SalesLT.Product p
	ON od.ProductID = p.ProductID
	GROUP BY od.SalesOrderID


5)Show the best selling item by value

SELECT p.ProductID,p.Name
FROM SalesLT.Product p WHERE p.ProductID IN (
		SELECT TOP 1 od.ProductID
            FROM SalesLT.SalesOrderDetail od 
			INNER JOIN SalesLT.Product p
			ON od.ProductID = p.ProductID
			GROUP BY od.ProductID 
			ORDER BY  SUM(od.OrderQty * (p.ListPrice - p.StandardCost)) DESC )

-------------------------------------------------------------------------------------------------------------

-- Combine all the queries without JOIN

SELECT oh.SalesOrderID,oh.SubTotal,'OrderHeader' AS TableName
     FROM SalesLT.SalesOrderHeader oh
	 UNION ALL
SELECT od.SalesOrderID, sum(od.OrderQty*od.UnitPrice),'OrderDetail' AS TableName
     FROM SalesLT.SalesOrderDetail od 
     GROUP BY od.SalesOrderID
	 UNION ALL
SELECT od.SalesOrderID, SUM(od.OrderQty * p.ListPrice) AS Subtotal,'Product' AS TableName
     FROM SalesLT.SalesOrderDetail od 
	 INNER JOIN SalesLT.Product p
	 ON od.ProductID = p.ProductID
	 GROUP BY od.SalesOrderID
6)


A) most no of order

	SELECT TOP 1 WITH TIES
	a.City,COUNT(*) AS CityCount
	FROM SalesLT.SalesOrderHeader oh
	INNER JOIN SalesLT.Customer c
	ON oh.CustomerID = c.CustomerID
	INNER JOIN SalesLT.CustomerAddress ca
	ON c.CustomerID = ca.CustomerID
	INNER JOIN SalesLT.Address a
	ON ca.AddressID = a.AddressID
	GROUP BY City 
	ORDER BY CityCount DESC
	 
B)most profitable city 

SELECT TOP 1 WITH TIES a.City,SUM(od.OrderQty * (p.ListPrice - p.StandardCost))
    FROM SalesLT.SalesOrderDetail od 
	INNER JOIN SalesLT.Product p
	ON od.ProductID = p.ProductID
	INNER JOIN SalesLT.SalesOrderHeader oh
	ON oh.SalesOrderID = od.SalesOrderID
	INNER JOIN SalesLT.Address a
	ON a.AddressID = oh.BillToAddressID
    GROUP BY a.City
	ORDER BY  SUM(od.OrderQty * (p.ListPrice - p.StandardCost)) DESC 

C)Which HASNT PLACED ANY ORDER


SELECT DISTINCT City
    FROM SalesLT.Address a 
    LEFT JOIN SalesLT.SalesOrderHeader oh
	ON a.AddressID= oh.BillToAddressID
	WHERE oh.SalesOrderID IS  NULL
	
	Q) Find the count occurence of a particular character in a column
	DECLARE @input AS CHAR = 'o'
  SELECT SUM(LEN(c.FirstName) - LEN(REPLACE(c.FirstName,@input,''))) FROM SalesLT.Customer c